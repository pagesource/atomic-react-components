{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 51,
  "numPassedTests": 209,
  "numPendingTestSuites": 0,
  "numPendingTests": 29,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 51,
  "numTotalTests": 238,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": true,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 4,
    "matched": 53,
    "total": 60,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 7
  },
  "startTime": 1585643609309,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render label correctly",
          "location": null,
          "status": "passed",
          "title": "should render label correctly"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render Input component with proper type",
          "location": null,
          "status": "passed",
          "title": "should render Input component with proper type"
        }
      ],
      "endTime": 1585643630354,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\FieldInput\\tests\\FieldInput.test.js",
      "startTime": 1585643615909,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component should render select tag correctly",
          "location": null,
          "status": "passed",
          "title": "should render select tag correctly"
        },
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component should render input text field",
          "location": null,
          "status": "passed",
          "title": "should render input text field"
        },
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component should render select field",
          "location": null,
          "status": "passed",
          "title": "should render select field"
        },
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component should render input field with yupValidationSchema",
          "location": null,
          "status": "passed",
          "title": "should render input field with yupValidationSchema"
        },
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component should render input field with no validation",
          "location": null,
          "status": "passed",
          "title": "should render input field with no validation"
        },
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component getSchema should return null if no params are passed",
          "location": null,
          "status": "passed",
          "title": "getSchema should return null if no params are passed"
        },
        {
          "ancestorTitles": ["Form Component"],
          "failureMessages": [],
          "fullName": "Form Component should render DateSelector field",
          "location": null,
          "status": "passed",
          "title": "should render DateSelector field"
        }
      ],
      "endTime": 1585643630390,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\tests\\Form.test.js",
      "startTime": 1585643615569,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["DDFieldInput Component"],
          "failureMessages": [],
          "fullName": "DDFieldInput Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["DDFieldInput Component"],
          "failureMessages": [],
          "fullName": "DDFieldInput Component should render Input component with proper type for multiple file upload.",
          "location": null,
          "status": "passed",
          "title": "should render Input component with proper type for multiple file upload."
        },
        {
          "ancestorTitles": ["DDFieldInput Component"],
          "failureMessages": [],
          "fullName": "DDFieldInput Component should render the component with prop correctly",
          "location": null,
          "status": "passed",
          "title": "should render the component with prop correctly"
        },
        {
          "ancestorTitles": ["DDFieldInput Component"],
          "failureMessages": [],
          "fullName": "DDFieldInput Component should match the input rendered correctly on change event simulation.",
          "location": null,
          "status": "passed",
          "title": "should match the input rendered correctly on change event simulation."
        },
        {
          "ancestorTitles": ["DDFieldInput Component"],
          "failureMessages": [],
          "fullName": "DDFieldInput Component should match the input rendered correctly on blur event simulation.",
          "location": null,
          "status": "passed",
          "title": "should match the input rendered correctly on blur event simulation."
        },
        {
          "ancestorTitles": ["testing the custom hook methods for drag and drop"],
          "failureMessages": [],
          "fullName": "testing the custom hook methods for drag and drop should simulate file upload and return array",
          "location": null,
          "status": "passed",
          "title": "should simulate file upload and return array"
        },
        {
          "ancestorTitles": ["testing the custom hook methods for drag and drop"],
          "failureMessages": [],
          "fullName": "testing the custom hook methods for drag and drop should make highlight as true on drag over as mouse enters draggable area",
          "location": null,
          "status": "passed",
          "title": "should make highlight as true on drag over as mouse enters draggable area"
        },
        {
          "ancestorTitles": ["testing the custom hook methods for drag and drop"],
          "failureMessages": [],
          "fullName": "testing the custom hook methods for drag and drop should make highlight as false on drag leave as mouse leaves draggable area",
          "location": null,
          "status": "passed",
          "title": "should make highlight as false on drag leave as mouse leaves draggable area"
        },
        {
          "ancestorTitles": ["testing the custom hook methods for drag and drop"],
          "failureMessages": [],
          "fullName": "testing the custom hook methods for drag and drop should test the files addition handler when file(s) are uploaded.",
          "location": null,
          "status": "passed",
          "title": "should test the files addition handler when file(s) are uploaded."
        },
        {
          "ancestorTitles": ["testing the custom hook methods for drag and drop"],
          "failureMessages": [],
          "fullName": "testing the custom hook methods for drag and drop should apply highlight when cursor moves draggable area.",
          "location": null,
          "status": "passed",
          "title": "should apply highlight when cursor moves draggable area."
        },
        {
          "ancestorTitles": ["testing the custom hook methods for drag and drop"],
          "failureMessages": [],
          "fullName": "testing the custom hook methods for drag and drop should apply highlight when cursor moves draggable area.",
          "location": null,
          "status": "passed",
          "title": "should apply highlight when cursor moves draggable area."
        }
      ],
      "endTime": 1585643630531,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\DragDropInput\\tests\\DragDropInput.test.js",
      "startTime": 1585643615725,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["FieldTextarea Component"],
          "failureMessages": [],
          "fullName": "FieldTextarea Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["FieldTextarea Component"],
          "failureMessages": [],
          "fullName": "FieldTextarea Component should render label correctly",
          "location": null,
          "status": "passed",
          "title": "should render label correctly"
        },
        {
          "ancestorTitles": ["FieldTextarea Component"],
          "failureMessages": [],
          "fullName": "FieldTextarea Component should render textarea tag",
          "location": null,
          "status": "passed",
          "title": "should render textarea tag"
        }
      ],
      "endTime": 1585643630881,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\FieldTextarea\\tests\\FieldTextarea.test.js",
      "startTime": 1585643616048,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render .typeahead-component correctly",
          "location": null,
          "status": "passed",
          "title": "should render .typeahead-component correctly"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render label correctly",
          "location": null,
          "status": "passed",
          "title": "should render label correctly"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render input correctly",
          "location": null,
          "status": "pending",
          "title": "should render input correctly"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render search type input correctly",
          "location": null,
          "status": "passed",
          "title": "should render search type input correctly"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should not render List by default",
          "location": null,
          "status": "passed",
          "title": "should not render List by default"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render onchange event",
          "location": null,
          "status": "pending",
          "title": "should render onchange event"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render input only 1s",
          "location": null,
          "status": "pending",
          "title": "should render input only 1s"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render label only 1s",
          "location": null,
          "status": "passed",
          "title": "should render label only 1s"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should not render list item",
          "location": null,
          "status": "passed",
          "title": "should not render list item"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should show list",
          "location": null,
          "status": "pending",
          "title": "should show list"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should return single list item",
          "location": null,
          "status": "pending",
          "title": "should return single list item"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should select particular list item by click",
          "location": null,
          "status": "pending",
          "title": "should select particular list item by click"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render span with id `initInstr`",
          "location": null,
          "status": "passed",
          "title": "should render span with id `initInstr`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the input with `aria-autocomplete`",
          "location": null,
          "status": "passed",
          "title": "should render the input with `aria-autocomplete`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the input with `aria-activedescendant`",
          "location": null,
          "status": "passed",
          "title": "should render the input with `aria-activedescendant`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the input with `aria-describedby`",
          "location": null,
          "status": "passed",
          "title": "should render the input with `aria-describedby`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the list items with `role=\"option\"`",
          "location": null,
          "status": "pending",
          "title": "should render the list items with `role=\"option\"`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the list items with `aria-selected`",
          "location": null,
          "status": "pending",
          "title": "should render the list items with `aria-selected`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the list items with `id=\"selectedOption\"`",
          "location": null,
          "status": "pending",
          "title": "should render the list items with `id=\"selectedOption\"`"
        },
        {
          "ancestorTitles": ["<Typeahead />"],
          "failureMessages": [],
          "fullName": "<Typeahead /> should render the list items with `id=\"selectedOption\"`",
          "location": null,
          "status": "pending",
          "title": "should render the list items with `id=\"selectedOption\"`"
        }
      ],
      "endTime": 1585643632101,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Typeahead\\tests\\Typeahead.test.js",
      "startTime": 1585643630544,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Test Suite 1: Check for component and it's child rendered correctly."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 1: Check for component and it's child rendered correctly. should render wrapper correctly for snapshot matching.",
          "location": null,
          "status": "passed",
          "title": "should render wrapper correctly for snapshot matching."
        },
        {
          "ancestorTitles": [
            "Test Suite 1: Check for component and it's child rendered correctly."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 1: Check for component and it's child rendered correctly. Cookie Disclaimer component rendered correctly.",
          "location": null,
          "status": "passed",
          "title": "Cookie Disclaimer component rendered correctly."
        },
        {
          "ancestorTitles": [
            "Test Suite 1: Check for component and it's child rendered correctly."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 1: Check for component and it's child rendered correctly. should render two buttons for accepting and rejecting the consent",
          "location": null,
          "status": "pending",
          "title": "should render two buttons for accepting and rejecting the consent"
        },
        {
          "ancestorTitles": [
            "Test Suite 2: Check for component and it's child for default props correctly."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 2: Check for component and it's child for default props correctly. Button props for button types to be rendered.",
          "location": null,
          "status": "pending",
          "title": "Button props for button types to be rendered."
        },
        {
          "ancestorTitles": [
            "Test Suite 2: Check for component and it's child for default props correctly."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 2: Check for component and it's child for default props correctly. Button props for button types to be rendered.",
          "location": null,
          "status": "pending",
          "title": "Button props for button types to be rendered."
        },
        {
          "ancestorTitles": ["Test Suite 3: testing styled component - HOC"],
          "failureMessages": [],
          "fullName": "Test Suite 3: testing styled component - HOC should rendered the component properly when styles are being applied.",
          "location": null,
          "status": "passed",
          "title": "should rendered the component properly when styles are being applied."
        },
        {
          "ancestorTitles": [
            "Test Suite 4: testing functional behaviour of the cookie disclaimer."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 4: testing functional behaviour of the cookie disclaimer. setting the isVisible variable to false",
          "location": null,
          "status": "passed",
          "title": "setting the isVisible variable to false"
        },
        {
          "ancestorTitles": [
            "Test Suite 4: testing functional behaviour of the cookie disclaimer."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 4: testing functional behaviour of the cookie disclaimer. accepting the consent and dropping the cookie.",
          "location": null,
          "status": "passed",
          "title": "accepting the consent and dropping the cookie."
        },
        {
          "ancestorTitles": [
            "Test Suite 4: testing functional behaviour of the cookie disclaimer."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 4: testing functional behaviour of the cookie disclaimer. rejecting the consent and dropping the cookie.",
          "location": null,
          "status": "passed",
          "title": "rejecting the consent and dropping the cookie."
        },
        {
          "ancestorTitles": [
            "Test Suite 4: testing functional behaviour of the cookie disclaimer."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 4: testing functional behaviour of the cookie disclaimer. getting the disclaimer state for rendering cookie disclaimer.",
          "location": null,
          "status": "passed",
          "title": "getting the disclaimer state for rendering cookie disclaimer."
        },
        {
          "ancestorTitles": [
            "Test Suite 4: testing functional behaviour of the cookie disclaimer."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 4: testing functional behaviour of the cookie disclaimer. Accept Button click simulation",
          "location": null,
          "status": "pending",
          "title": "Accept Button click simulation"
        },
        {
          "ancestorTitles": [
            "Test Suite 4: testing functional behaviour of the cookie disclaimer."
          ],
          "failureMessages": [],
          "fullName": "Test Suite 4: testing functional behaviour of the cookie disclaimer. Reject Button click simulation",
          "location": null,
          "status": "pending",
          "title": "Reject Button click simulation"
        }
      ],
      "endTime": 1585643632138,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\CookieDisclaimer\\tests\\CookieDisclaimer.test.js",
      "startTime": 1585643630701,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> should have slider wrapper as one child only",
          "location": null,
          "status": "passed",
          "title": "should have slider wrapper as one child only"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Children should have first slide as active initially",
          "location": null,
          "status": "passed",
          "title": "Children should have first slide as active initially"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should display dots on using <Carousel.Dots> component only",
          "location": null,
          "status": "passed",
          "title": "Should display dots on using <Carousel.Dots> component only"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should change slide on click dots",
          "location": null,
          "status": "passed",
          "title": "Should change slide on click dots"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should active next slide on click next",
          "location": null,
          "status": "passed",
          "title": "Should active next slide on click next"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should active previous slide on key press right arrow",
          "location": null,
          "status": "passed",
          "title": "Should active previous slide on key press right arrow"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should active previous slide on click previous",
          "location": null,
          "status": "passed",
          "title": "Should active previous slide on click previous"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should active previous slide on key press left",
          "location": null,
          "status": "passed",
          "title": "Should active previous slide on key press left"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should display controls extract from Component",
          "location": null,
          "status": "passed",
          "title": "Should display controls extract from Component"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should be responsive",
          "location": null,
          "status": "passed",
          "title": "Should be responsive"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should render Controls with Controls Component",
          "location": null,
          "status": "passed",
          "title": "Should render Controls with Controls Component"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should render Animation Controls",
          "location": null,
          "status": "passed",
          "title": "Should render Animation Controls"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should render pause after click play animation controls",
          "location": null,
          "status": "passed",
          "title": "Should render pause after click play animation controls"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should autoplay",
          "location": null,
          "status": "passed",
          "title": "Should autoplay"
        },
        {
          "ancestorTitles": ["<Carousel />"],
          "failureMessages": [],
          "fullName": "<Carousel /> Should stop animation on mouse enter",
          "location": null,
          "status": "passed",
          "title": "Should stop animation on mouse enter"
        }
      ],
      "endTime": 1585643632537,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Carousel\\tests\\Carousel.test.js",
      "startTime": 1585643630467,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<QuoteMedia />"],
          "failureMessages": [],
          "fullName": "<QuoteMedia /> Should have component heading being displayed",
          "location": null,
          "status": "passed",
          "title": "Should have component heading being displayed"
        },
        {
          "ancestorTitles": ["<QuoteMedia />"],
          "failureMessages": [],
          "fullName": "<QuoteMedia /> Should allow quote component passing",
          "location": null,
          "status": "passed",
          "title": "Should allow quote component passing"
        },
        {
          "ancestorTitles": ["<QuoteMedia />"],
          "failureMessages": [],
          "fullName": "<QuoteMedia /> Should render media Image in component body",
          "location": null,
          "status": "passed",
          "title": "Should render media Image in component body"
        },
        {
          "ancestorTitles": ["<QuoteMedia />"],
          "failureMessages": [],
          "fullName": "<QuoteMedia /> Should render correctly",
          "location": null,
          "status": "passed",
          "title": "Should render correctly"
        }
      ],
      "endTime": 1585643634398,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\QuoteMedia\\tests\\QuoteMedia.test.js",
      "startTime": 1585643632763,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should render label correctly",
          "location": null,
          "status": "passed",
          "title": "should render label correctly"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should render label with Value correctly",
          "location": null,
          "status": "passed",
          "title": "should render label with Value correctly"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should render input correctly",
          "location": null,
          "status": "passed",
          "title": "should render input correctly"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should render disabled input",
          "location": null,
          "status": "passed",
          "title": "should render disabled input"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should tigger click event with toggle Value",
          "location": null,
          "status": "passed",
          "title": "should tigger click event with toggle Value"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should render Indicator On",
          "location": null,
          "status": "passed",
          "title": "should render Indicator On"
        },
        {
          "ancestorTitles": ["<FieldToggle />"],
          "failureMessages": [],
          "fullName": "<FieldToggle /> should tigger handleToggleCallback function",
          "location": null,
          "status": "passed",
          "title": "should tigger handleToggleCallback function"
        }
      ],
      "endTime": 1585643635142,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\FieldToggle\\tests\\FieldToggle.test.js",
      "startTime": 1585643631011,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Tabs />"],
          "failureMessages": [],
          "fullName": "<Tabs /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Tabs /> functional behavior"],
          "failureMessages": [],
          "fullName": "<Tabs /> functional behavior should have minimum dom structure for the tests below",
          "location": null,
          "status": "passed",
          "title": "should have minimum dom structure for the tests below"
        },
        {
          "ancestorTitles": ["<Tabs /> functional behavior"],
          "failureMessages": [],
          "fullName": "<Tabs /> functional behavior should change the tab panel and execute callback on closed tab click",
          "location": null,
          "status": "passed",
          "title": "should change the tab panel and execute callback on closed tab click"
        }
      ],
      "endTime": 1585643635626,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Tabs\\tests\\Tabs.test.js",
      "startTime": 1585643634486,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Breadcrumb />"],
          "failureMessages": [],
          "fullName": "<Breadcrumb /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643636227,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Breadcrumb\\tests\\Breadcrumb.test.js",
      "startTime": 1585643632561,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should have table component",
          "location": null,
          "status": "passed",
          "title": "should have table component"
        },
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should have thead component",
          "location": null,
          "status": "passed",
          "title": "should have thead component"
        },
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should have tbody component",
          "location": null,
          "status": "passed",
          "title": "should have tbody component"
        },
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should have th is equal to number of columns",
          "location": null,
          "status": "passed",
          "title": "should have th is equal to number of columns"
        },
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should have tr is equal to number of data rows",
          "location": null,
          "status": "passed",
          "title": "should have tr is equal to number of data rows"
        },
        {
          "ancestorTitles": ["Table"],
          "failureMessages": [],
          "fullName": "Table should loop through each row and check the content",
          "location": null,
          "status": "passed",
          "title": "should loop through each row and check the content"
        }
      ],
      "endTime": 1585643636419,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Table\\tests\\Table.test.js",
      "startTime": 1585643635281,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<ArticleThumbnail />"],
          "failureMessages": [],
          "fullName": "<ArticleThumbnail /> should render correctly with Readmore",
          "location": null,
          "status": "passed",
          "title": "should render correctly with Readmore"
        },
        {
          "ancestorTitles": ["<ArticleThumbnail />"],
          "failureMessages": [],
          "fullName": "<ArticleThumbnail /> should render correctly with full clickable thumb",
          "location": null,
          "status": "passed",
          "title": "should render correctly with full clickable thumb"
        }
      ],
      "endTime": 1585643636457,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\ArticleThumbnail\\tests\\ArticleThumbnail.test.js",
      "startTime": 1585643635726,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Toast />"],
          "failureMessages": [],
          "fullName": "<Toast /> <Toast />should render correctly",
          "location": null,
          "status": "passed",
          "title": "<Toast />should render correctly"
        },
        {
          "ancestorTitles": ["<Toast /> Component"],
          "failureMessages": [],
          "fullName": "<Toast /> Component is rendering root div,if isVisible prop is true ",
          "location": null,
          "status": "passed",
          "title": "is rendering root div,if isVisible prop is true "
        },
        {
          "ancestorTitles": ["<Toast /> Component"],
          "failureMessages": [],
          "fullName": "<Toast /> Component not rendering root div,if isVisible prop is false",
          "location": null,
          "status": "passed",
          "title": "not rendering root div,if isVisible prop is false"
        },
        {
          "ancestorTitles": ["<Toast /> Component"],
          "failureMessages": [],
          "fullName": "<Toast /> Component is rendering all necessary elements rendered if isVisible prop is true",
          "location": null,
          "status": "pending",
          "title": "is rendering all necessary elements rendered if isVisible prop is true"
        },
        {
          "ancestorTitles": ["<Toast /> Component"],
          "failureMessages": [],
          "fullName": "<Toast /> Component is rendering ProgressBar if autoDismissTimeout is set as 0",
          "location": null,
          "status": "passed",
          "title": "is rendering ProgressBar if autoDismissTimeout is set as 0"
        },
        {
          "ancestorTitles": ["<Toast /> Component"],
          "failureMessages": [],
          "fullName": "<Toast /> Component is rendering ProgressBar if autoDismissTimeout is set as 3000",
          "location": null,
          "status": "passed",
          "title": "is rendering ProgressBar if autoDismissTimeout is set as 3000"
        },
        {
          "ancestorTitles": ["<Toast /> Component"],
          "failureMessages": [],
          "fullName": "<Toast /> Component is rendering children ",
          "location": null,
          "status": "passed",
          "title": "is rendering children "
        },
        {
          "ancestorTitles": ["<Toast /> Component is checking effects on"],
          "failureMessages": [],
          "fullName": "<Toast /> Component is checking effects on onClick event, should dismiss the toast when clicking  on click of X button click",
          "location": null,
          "status": "passed",
          "title": "onClick event, should dismiss the toast when clicking  on click of X button click"
        },
        {
          "ancestorTitles": ["<Toast /> component useeffect hook for autodismiss"],
          "failureMessages": [],
          "fullName": "<Toast /> component useeffect hook for autodismiss autodismiss after timeout",
          "location": null,
          "status": "passed",
          "title": "autodismiss after timeout"
        }
      ],
      "endTime": 1585643636870,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Toast\\tests\\Toast.test.js",
      "startTime": 1585643632373,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should render `.pagination` component",
          "location": null,
          "status": "passed",
          "title": "should render `.pagination` component"
        },
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should render an `.last`",
          "location": null,
          "status": "passed",
          "title": "should render an `.last`"
        },
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should render a `firstLabel`",
          "location": null,
          "status": "passed",
          "title": "should render a `firstLabel`"
        },
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should render a `lastLabel`",
          "location": null,
          "status": "passed",
          "title": "should render a `lastLabel`"
        },
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should test click event on first button",
          "location": null,
          "status": "passed",
          "title": "should test click event on first button"
        },
        {
          "ancestorTitles": ["<Pagination />"],
          "failureMessages": [],
          "fullName": "<Pagination /> should test click event on last button",
          "location": null,
          "status": "pending",
          "title": "should test click event on last button"
        }
      ],
      "endTime": 1585643637162,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Pagination\\tests\\Pagination.test.js",
      "startTime": 1585643636339,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<StickyBar />"],
          "failureMessages": [],
          "fullName": "<StickyBar /> should render the List Component",
          "location": null,
          "status": "passed",
          "title": "should render the List Component"
        },
        {
          "ancestorTitles": ["<StickyBar />"],
          "failureMessages": [],
          "fullName": "<StickyBar /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643637420,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\StickyBar\\tests\\StickyBar.test.js",
      "startTime": 1585643636549,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should have video tag",
          "location": null,
          "status": "passed",
          "title": "should have video tag"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should have source tag in video",
          "location": null,
          "status": "passed",
          "title": "should have source tag in video"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should have src attribute in source tag",
          "location": null,
          "status": "passed",
          "title": "should have src attribute in source tag"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should not be autoplay",
          "location": null,
          "status": "passed",
          "title": "should not be autoplay"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should not have track element only should have Track component",
          "location": null,
          "status": "passed",
          "title": "should not have track element only should have Track component"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should have children",
          "location": null,
          "status": "passed",
          "title": "should have children"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> track component without data",
          "location": null,
          "status": "passed",
          "title": "track component without data"
        },
        {
          "ancestorTitles": ["<Video />"],
          "failureMessages": [],
          "fullName": "<Video /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643637498,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Video\\tests\\Video.test.js",
      "startTime": 1585643636522,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Select Component"],
          "failureMessages": [],
          "fullName": "Select Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["Select Component"],
          "failureMessages": [],
          "fullName": "Select Component should check the data attribute of dropdown/select",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of dropdown/select"
        }
      ],
      "endTime": 1585643637985,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Select\\tests\\Select.test.js",
      "startTime": 1585643637025,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Skeleton />"],
          "failureMessages": [],
          "fullName": "<Skeleton /> should render the <Skeleton> /",
          "location": null,
          "status": "passed",
          "title": "should render the <Skeleton> /"
        },
        {
          "ancestorTitles": ["<Skeleton />"],
          "failureMessages": [],
          "fullName": "<Skeleton /> should render <div/>",
          "location": null,
          "status": "passed",
          "title": "should render <div/>"
        },
        {
          "ancestorTitles": ["<Skeleton />"],
          "failureMessages": [],
          "fullName": "<Skeleton /> should render a skeleton line",
          "location": null,
          "status": "passed",
          "title": "should render a skeleton line"
        },
        {
          "ancestorTitles": ["<Skeleton />"],
          "failureMessages": [],
          "fullName": "<Skeleton /> should render a skeleton circle",
          "location": null,
          "status": "passed",
          "title": "should render a skeleton circle"
        },
        {
          "ancestorTitles": ["<Skeleton />"],
          "failureMessages": [],
          "fullName": "<Skeleton /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643638310,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Skeleton\\tests\\Skeleton.test.js",
      "startTime": 1585643637297,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Popover /> Rendering"],
          "failureMessages": [],
          "fullName": "<Popover /> Rendering should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["Popover functional behavior"],
          "failureMessages": [],
          "fullName": "Popover functional behavior Should have Close Button By Default and can be closed",
          "location": null,
          "status": "passed",
          "title": "Should have Close Button By Default and can be closed"
        },
        {
          "ancestorTitles": ["Popover functional behavior"],
          "failureMessages": [],
          "fullName": "Popover functional behavior Should open By Default when isVisible set to true",
          "location": null,
          "status": "passed",
          "title": "Should open By Default when isVisible set to true"
        },
        {
          "ancestorTitles": ["Popover functional behavior"],
          "failureMessages": [],
          "fullName": "Popover functional behavior Should open and close on Trigger and X button click",
          "location": null,
          "status": "passed",
          "title": "Should open and close on Trigger and X button click"
        }
      ],
      "endTime": 1585643638412,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Popover\\tests\\Popover.test.js",
      "startTime": 1585643637508,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<HeroBanner />"],
          "failureMessages": [],
          "fullName": "<HeroBanner /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<HeroBanner />"],
          "failureMessages": [],
          "fullName": "<HeroBanner /> should render a div",
          "location": null,
          "status": "passed",
          "title": "should render a div"
        },
        {
          "ancestorTitles": ["<HeroBanner />"],
          "failureMessages": [],
          "fullName": "<HeroBanner /> should render a header",
          "location": null,
          "status": "passed",
          "title": "should render a header"
        },
        {
          "ancestorTitles": ["<HeroBanner />"],
          "failureMessages": [],
          "fullName": "<HeroBanner /> should render a header with role as banner",
          "location": null,
          "status": "passed",
          "title": "should render a header with role as banner"
        },
        {
          "ancestorTitles": ["<HeroBanner />"],
          "failureMessages": [],
          "fullName": "<HeroBanner /> should render Hero Image",
          "location": null,
          "status": "pending",
          "title": "should render Hero Image"
        },
        {
          "ancestorTitles": ["<HeroBanner />"],
          "failureMessages": [],
          "fullName": "<HeroBanner /> should render children",
          "location": null,
          "status": "pending",
          "title": "should render children"
        }
      ],
      "endTime": 1585643638683,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\HeroBanner\\tests\\HeroBanner.test.js",
      "startTime": 1585643637619,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Image Component with styles"],
          "failureMessages": [],
          "fullName": "Image Component with styles should render correctly and match snapshots",
          "location": null,
          "status": "passed",
          "title": "should render correctly and match snapshots"
        },
        {
          "ancestorTitles": ["Image Component with styles"],
          "failureMessages": [],
          "fullName": "Image Component with styles should render correctly with lazy load",
          "location": null,
          "status": "passed",
          "title": "should render correctly with lazy load"
        }
      ],
      "endTime": 1585643639069,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Image\\tests\\Image.style.test.js",
      "startTime": 1585643638086,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render the 3 Select Components(date month and year)",
          "location": null,
          "status": "passed",
          "title": "should render the 3 Select Components(date month and year)"
        },
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render the 3 Select Components(date month and year)",
          "location": null,
          "status": "passed",
          "title": "should render the 3 Select Components(date month and year)"
        },
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render the 3 Select Components(month date and year)",
          "location": null,
          "status": "passed",
          "title": "should render the 3 Select Components(month date and year)"
        },
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render the 3 Select Components(month date and year)",
          "location": null,
          "status": "passed",
          "title": "should render the 3 Select Components(month date and year)"
        },
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render the 2 Select Components(month and year selectors)",
          "location": null,
          "status": "passed",
          "title": "should render the 2 Select Components(month and year selectors)"
        },
        {
          "ancestorTitles": ["<FieldDateSelector />"],
          "failureMessages": [],
          "fullName": "<FieldDateSelector /> should render the 2 Select Components(month and year selectors)",
          "location": null,
          "status": "passed",
          "title": "should render the 2 Select Components(month and year selectors)"
        }
      ],
      "endTime": 1585643639393,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\FieldDateSelector\\tests\\FieldDateSelector.test.js",
      "startTime": 1585643638506,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render label correctly",
          "location": null,
          "status": "passed",
          "title": "should render label correctly"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render select tag",
          "location": null,
          "status": "passed",
          "title": "should render select tag"
        }
      ],
      "endTime": 1585643639482,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\FieldSelect\\tests\\FieldSelect.test.js",
      "startTime": 1585643638425,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<ProgressIndicator />"],
          "failureMessages": [],
          "fullName": "<ProgressIndicator /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<ProgressIndicator/> Component", "should render"],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component should render <ProgressIndicator/> Component correctly",
          "location": null,
          "status": "passed",
          "title": "<ProgressIndicator/> Component correctly"
        },
        {
          "ancestorTitles": ["<ProgressIndicator/> Component", "should render"],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component should render all necessary elements correctly",
          "location": null,
          "status": "passed",
          "title": "all necessary elements correctly"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Bar`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Bar`, <ProgressIndicator/> Component should render <li/> children",
          "location": null,
          "status": "pending",
          "title": "render <li/> children"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Bar`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Bar`, <ProgressIndicator/> Component should render Progress Label Value",
          "location": null,
          "status": "pending",
          "title": "render Progress Label Value"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Bar`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Bar`, <ProgressIndicator/> Component should calculate inactive children or Steps",
          "location": null,
          "status": "pending",
          "title": "calculate inactive children or Steps"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Bar`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Bar`, <ProgressIndicator/> Component should calculate completed children or Steps",
          "location": null,
          "status": "pending",
          "title": "calculate completed children or Steps"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Bar`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Bar`, <ProgressIndicator/> Component should calculate active children or Steps",
          "location": null,
          "status": "pending",
          "title": "calculate active children or Steps"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Step`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Step`, <ProgressIndicator/> Component should render <li/> children",
          "location": null,
          "status": "passed",
          "title": "render <li/> children"
        },
        {
          "ancestorTitles": [
            "<ProgressIndicator/> Component",
            "if Variation is equal to `Step`, <ProgressIndicator/> Component should"
          ],
          "failureMessages": [],
          "fullName": "<ProgressIndicator/> Component if Variation is equal to `Step`, <ProgressIndicator/> Component should not render Progress Label Value",
          "location": null,
          "status": "passed",
          "title": "not render Progress Label Value"
        }
      ],
      "endTime": 1585643639782,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\ProgressIndicator\\tests\\ProgressIndicator.test.js",
      "startTime": 1585643638801,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render button with type = \"button\".",
          "location": null,
          "status": "pending",
          "title": "should render button with type = \"button\"."
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render 1st button with theme prop type, tertiary",
          "location": null,
          "status": "pending",
          "title": "should render 1st button with theme prop type, tertiary"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should render 2nd button with theme prop type, primary",
          "location": null,
          "status": "pending",
          "title": "should render 2nd button with theme prop type, primary"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should match the button text rendered",
          "location": null,
          "status": "passed",
          "title": "should match the button text rendered"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should match the button text rendered for second button",
          "location": null,
          "status": "passed",
          "title": "should match the button text rendered for second button"
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should match the label rendered correctly.",
          "location": null,
          "status": "passed",
          "title": "should match the label rendered correctly."
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should match the input rendered correctly.",
          "location": null,
          "status": "passed",
          "title": "should match the input rendered correctly."
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should match the input rendered correctly on change event simulation.",
          "location": null,
          "status": "passed",
          "title": "should match the input rendered correctly on change event simulation."
        },
        {
          "ancestorTitles": ["FieldInput Component"],
          "failureMessages": [],
          "fullName": "FieldInput Component should match the input rendered correctly on blur event simulation.",
          "location": null,
          "status": "passed",
          "title": "should match the input rendered correctly on blur event simulation."
        }
      ],
      "endTime": 1585643640145,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\FieldFileInput\\tests\\FieldFileInput.test.js",
      "startTime": 1585643639165,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Modal Component"],
          "failureMessages": [],
          "fullName": "Modal Component should render Modal correctly",
          "location": null,
          "status": "passed",
          "title": "should render Modal correctly"
        }
      ],
      "endTime": 1585643640541,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Modal\\tests\\Modal.test.js",
      "startTime": 1585643639518,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<WithScripts />"],
          "failureMessages": [],
          "fullName": "<WithScripts /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<WithScripts />"],
          "failureMessages": [],
          "fullName": "<WithScripts /> should not render duplicate ids",
          "location": null,
          "status": "passed",
          "title": "should not render duplicate ids"
        }
      ],
      "endTime": 1585643640585,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\hoc\\WithScripts\\tests\\WithScripts.test.js",
      "startTime": 1585643639656,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Tag />"],
          "failureMessages": [],
          "fullName": "<Tag /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Tag />"],
          "failureMessages": [],
          "fullName": "<Tag /> should render provided text",
          "location": null,
          "status": "passed",
          "title": "should render provided text"
        },
        {
          "ancestorTitles": ["<Tag />"],
          "failureMessages": [],
          "fullName": "<Tag /> should control remove button availability through prop",
          "location": null,
          "status": "pending",
          "title": "should control remove button availability through prop"
        },
        {
          "ancestorTitles": ["<Tag />"],
          "failureMessages": [],
          "fullName": "<Tag /> should call parent method on remove if available",
          "location": null,
          "status": "pending",
          "title": "should call parent method on remove if available"
        }
      ],
      "endTime": 1585643640850,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Tag\\tests\\Tag.test.js",
      "startTime": 1585643639931,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Input Component"],
          "failureMessages": [],
          "fullName": "Input Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["Input Component"],
          "failureMessages": [],
          "fullName": "Input Component should check the data attribute of input",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of input"
        },
        {
          "ancestorTitles": ["File Input Component -> Unit Testing"],
          "failureMessages": [],
          "fullName": "File Input Component -> Unit Testing should render file input component correctly",
          "location": null,
          "status": "passed",
          "title": "should render file input component correctly"
        },
        {
          "ancestorTitles": ["File Input Component -> Unit Testing"],
          "failureMessages": [],
          "fullName": "File Input Component -> Unit Testing should call function on click of the input field",
          "location": null,
          "status": "passed",
          "title": "should call function on click of the input field"
        },
        {
          "ancestorTitles": ["File Input Component -> Unit Testing"],
          "failureMessages": [],
          "fullName": "File Input Component -> Unit Testing should simulate click event of the input field",
          "location": null,
          "status": "passed",
          "title": "should simulate click event of the input field"
        },
        {
          "ancestorTitles": ["File Input Component -> Unit Testing"],
          "failureMessages": [],
          "fullName": "File Input Component -> Unit Testing should render with prop \"multiple\" to distinguish multiple or single file",
          "location": null,
          "status": "passed",
          "title": "should render with prop \"multiple\" to distinguish multiple or single file"
        },
        {
          "ancestorTitles": ["File Input Component -> Unit Testing"],
          "failureMessages": [],
          "fullName": "File Input Component -> Unit Testing should render input correctly",
          "location": null,
          "status": "passed",
          "title": "should render input correctly"
        }
      ],
      "endTime": 1585643641258,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Input\\tests\\Input.test.js",
      "startTime": 1585643640308,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Heading Component"],
          "failureMessages": [],
          "fullName": "Heading Component should render correctly and match snapshot",
          "location": null,
          "status": "passed",
          "title": "should render correctly and match snapshot"
        },
        {
          "ancestorTitles": ["Heading Component"],
          "failureMessages": [],
          "fullName": "Heading Component should check the custom locator of heading",
          "location": null,
          "status": "passed",
          "title": "should check the custom locator of heading"
        },
        {
          "ancestorTitles": ["Heading Component"],
          "failureMessages": [],
          "fullName": "Heading Component should check the default locator of heading",
          "location": null,
          "status": "passed",
          "title": "should check the default locator of heading"
        }
      ],
      "endTime": 1585643641552,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Heading\\tests\\Heading.test.js",
      "startTime": 1585643640687,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Accordion />"],
          "failureMessages": [],
          "fullName": "<Accordion /> accordion renders",
          "location": null,
          "status": "passed",
          "title": "accordion renders"
        },
        {
          "ancestorTitles": ["<Accordion />"],
          "failureMessages": [],
          "fullName": "<Accordion /> should render <div/>",
          "location": null,
          "status": "passed",
          "title": "should render <div/>"
        },
        {
          "ancestorTitles": ["<Accordion />"],
          "failureMessages": [],
          "fullName": "<Accordion /> should render details",
          "location": null,
          "status": "passed",
          "title": "should render details"
        },
        {
          "ancestorTitles": ["<Accordion />"],
          "failureMessages": [],
          "fullName": "<Accordion /> should render summary",
          "location": null,
          "status": "passed",
          "title": "should render summary"
        },
        {
          "ancestorTitles": ["<Accordion />"],
          "failureMessages": [],
          "fullName": "<Accordion /> panel opens on click of header",
          "location": null,
          "status": "passed",
          "title": "panel opens on click of header"
        },
        {
          "ancestorTitles": ["<Accordion />"],
          "failureMessages": [],
          "fullName": "<Accordion /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643641571,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Accordion\\tests\\Accordion.test.js",
      "startTime": 1585643640640,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Button"],
          "failureMessages": [],
          "fullName": "Button should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643641944,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Button\\tests\\Button.style.test.js",
      "startTime": 1585643640943,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Select Styled component"],
          "failureMessages": [],
          "fullName": "Select Styled component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643642199,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Select\\tests\\Select.style.test.js",
      "startTime": 1585643641387,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["FieldError Component"],
          "failureMessages": [],
          "fullName": "FieldError Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["FieldError Component"],
          "failureMessages": [],
          "fullName": "FieldError Component should check the element locator of field error",
          "location": null,
          "status": "passed",
          "title": "should check the element locator of field error"
        },
        {
          "ancestorTitles": ["FieldError Component"],
          "failureMessages": [],
          "fullName": "FieldError Component should check the default slnid of field error",
          "location": null,
          "status": "passed",
          "title": "should check the default slnid of field error"
        }
      ],
      "endTime": 1585643642394,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\FieldError\\tests\\FieldError.test.js",
      "startTime": 1585643641651,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Anchor Component"],
          "failureMessages": [],
          "fullName": "Anchor Component should render correctly and match snapshot",
          "location": null,
          "status": "passed",
          "title": "should render correctly and match snapshot"
        },
        {
          "ancestorTitles": ["Anchor Component"],
          "failureMessages": [],
          "fullName": "Anchor Component Should handle on typeahead focuson Events",
          "location": null,
          "status": "passed",
          "title": "Should handle on typeahead focuson Events"
        },
        {
          "ancestorTitles": ["Anchor Component"],
          "failureMessages": [],
          "fullName": "Anchor Component should check the data attribute of anchor",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of anchor"
        }
      ],
      "endTime": 1585643642510,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Anchor\\tests\\Anchor.test.js",
      "startTime": 1585643641681,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Blockquote />"],
          "failureMessages": [],
          "fullName": "<Blockquote /> should render blockquote",
          "location": null,
          "status": "passed",
          "title": "should render blockquote"
        },
        {
          "ancestorTitles": ["<Blockquote />"],
          "failureMessages": [],
          "fullName": "<Blockquote /> should render content",
          "location": null,
          "status": "passed",
          "title": "should render content"
        },
        {
          "ancestorTitles": ["<Blockquote />"],
          "failureMessages": [],
          "fullName": "<Blockquote /> check quoteContent value passed in",
          "location": null,
          "status": "passed",
          "title": "check quoteContent value passed in"
        },
        {
          "ancestorTitles": ["<Blockquote />"],
          "failureMessages": [],
          "fullName": "<Blockquote /> check quoteAuthor value passed in",
          "location": null,
          "status": "passed",
          "title": "check quoteAuthor value passed in"
        },
        {
          "ancestorTitles": ["<Blockquote />"],
          "failureMessages": [],
          "fullName": "<Blockquote /> should render author name",
          "location": null,
          "status": "passed",
          "title": "should render author name"
        },
        {
          "ancestorTitles": ["<Blockquote />"],
          "failureMessages": [],
          "fullName": "<Blockquote /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643643009,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Blockquote\\tests\\Blockquote.test.js",
      "startTime": 1585643642041,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Button Component"],
          "failureMessages": [],
          "fullName": "Button Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["Button Component"],
          "failureMessages": [],
          "fullName": "Button Component should render disabled",
          "location": null,
          "status": "passed",
          "title": "should render disabled"
        },
        {
          "ancestorTitles": ["Button Component"],
          "failureMessages": [],
          "fullName": "Button Component should render title element",
          "location": null,
          "status": "passed",
          "title": "should render title element"
        },
        {
          "ancestorTitles": ["Button Component"],
          "failureMessages": [],
          "fullName": "Button Component should render aria attribute element",
          "location": null,
          "status": "passed",
          "title": "should render aria attribute element"
        },
        {
          "ancestorTitles": ["Button Component"],
          "failureMessages": [],
          "fullName": "Button Component should check the data attribute of button",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of button"
        }
      ],
      "endTime": 1585643643144,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Button\\tests\\Button.test.js",
      "startTime": 1585643642286,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Para Component"],
          "failureMessages": [],
          "fullName": "Para Component should render correctly and match snapshot",
          "location": null,
          "status": "passed",
          "title": "should render correctly and match snapshot"
        },
        {
          "ancestorTitles": ["Para Component"],
          "failureMessages": [],
          "fullName": "Para Component should check the data attribute of para",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of para"
        }
      ],
      "endTime": 1585643643366,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Para\\tests\\Para.test.js",
      "startTime": 1585643642623,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Textarea />"],
          "failureMessages": [],
          "fullName": "<Textarea /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Textarea />"],
          "failureMessages": [],
          "fullName": "<Textarea /> should check the data attribute of textarea",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of textarea"
        }
      ],
      "endTime": 1585643643391,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Textarea\\tests\\Textarea.test.js",
      "startTime": 1585643642532,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Image Component"],
          "failureMessages": [],
          "fullName": "Image Component should render correctly and match snapshots",
          "location": null,
          "status": "passed",
          "title": "should render correctly and match snapshots"
        },
        {
          "ancestorTitles": ["Image Component"],
          "failureMessages": [],
          "fullName": "Image Component should change image src on error",
          "location": null,
          "status": "passed",
          "title": "should change image src on error"
        },
        {
          "ancestorTitles": ["Image Component"],
          "failureMessages": [],
          "fullName": "Image Component should check the data attribute of image",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of image"
        },
        {
          "ancestorTitles": ["Image Component"],
          "failureMessages": [],
          "fullName": "Image Component should check the default locator of image",
          "location": null,
          "status": "passed",
          "title": "should check the default locator of image"
        }
      ],
      "endTime": 1585643643828,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Image\\tests\\Image.test.js",
      "startTime": 1585643643124,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Select Styled component"],
          "failureMessages": [],
          "fullName": "Select Styled component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643644060,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Textarea\\tests\\Textarea.style.test.js",
      "startTime": 1585643643230,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["InputChoiceVanilla Component"],
          "failureMessages": [],
          "fullName": "InputChoiceVanilla Component should render Radio button correctly",
          "location": null,
          "status": "passed",
          "title": "should render Radio button correctly"
        },
        {
          "ancestorTitles": ["InputChoiceVanilla Component"],
          "failureMessages": [],
          "fullName": "InputChoiceVanilla Component should render checkbox correctly",
          "location": null,
          "status": "passed",
          "title": "should render checkbox correctly"
        },
        {
          "ancestorTitles": ["InputChoiceVanilla Component"],
          "failureMessages": [],
          "fullName": "InputChoiceVanilla Component should render disabled",
          "location": null,
          "status": "passed",
          "title": "should render disabled"
        },
        {
          "ancestorTitles": ["InputChoiceVanilla Component"],
          "failureMessages": [],
          "fullName": "InputChoiceVanilla Component should render checked",
          "location": null,
          "status": "passed",
          "title": "should render checked"
        }
      ],
      "endTime": 1585643644274,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\InputChoice\\tests\\InputChoice.test.js",
      "startTime": 1585643643468,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Input Styled component"],
          "failureMessages": [],
          "fullName": "Input Styled component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643644396,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Input\\tests\\Input.style.test.js",
      "startTime": 1585643643450,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Icon />"],
          "failureMessages": [],
          "fullName": "<Icon /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["<Icon />"],
          "failureMessages": [],
          "fullName": "<Icon /> should have id",
          "location": null,
          "status": "passed",
          "title": "should have id"
        }
      ],
      "endTime": 1585643644780,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Icon\\tests\\Icon.test.js",
      "startTime": 1585643643928,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Label Component"],
          "failureMessages": [],
          "fullName": "Label Component should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        },
        {
          "ancestorTitles": ["Label Component"],
          "failureMessages": [],
          "fullName": "Label Component should check the data attribute of label",
          "location": null,
          "status": "passed",
          "title": "should check the data attribute of label"
        }
      ],
      "endTime": 1585643644999,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Label\\tests\\Label.test.js",
      "startTime": 1585643644151,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<List />"],
          "failureMessages": [],
          "fullName": "<List /> should render default view correctly",
          "location": null,
          "status": "passed",
          "title": "should render default view correctly"
        }
      ],
      "endTime": 1585643645129,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\List\\tests\\List.test.js",
      "startTime": 1585643644368,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Track />"],
          "failureMessages": [],
          "fullName": "<Track /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643645312,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\atoms\\Track\\tests\\Track.test.js",
      "startTime": 1585643644481,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<TabPanel />"],
          "failureMessages": [],
          "fullName": "<TabPanel /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643645670,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Tabs\\TabPanel\\tests\\TabPanel.test.js",
      "startTime": 1585643644862,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["Debug"],
          "failureMessages": [],
          "fullName": "Debug should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643645891,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Form\\Debug\\tests\\Debug.test.js",
      "startTime": 1585643645223,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": ["<Tab />"],
          "failureMessages": [],
          "fullName": "<Tab /> should render correctly",
          "location": null,
          "status": "passed",
          "title": "should render correctly"
        }
      ],
      "endTime": 1585643645938,
      "message": "",
      "name": "C:\\Users\\kirsharm1\\Projects\\AtomicComponent\\atomic-react-components\\lib\\components\\molecules\\Tabs\\Tab\\tests\\Tab.test.js",
      "startTime": 1585643645101,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {}
}
