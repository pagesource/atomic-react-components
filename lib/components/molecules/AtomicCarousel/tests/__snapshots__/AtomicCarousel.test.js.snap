// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AtomicCarousel /> Should render correctly 1`] = `
<AtomicCarousel>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "AtomicCarousel-sc-18kyvc6-0",
          "isStatic": false,
          "lastClassName": "eksFus",
          "rules": Array [
            "display:flex;flex-direction:column;align-items:center;width:100%;button{cursor:",
            [Function],
            ";&:focus{outline:rgba(0,0,0,0.9) dashed 1px;}}.carousel-heading{margin:10px 0;",
            [Function],
            "}.carousel-container{margin:10px 0;display:flex;justify-content:space-between;align-items:center;position:relative;}.atomic-dots{margin:10px 0;& > ul{display:flex;align-items:center;justify-content:center;margin:0;li{width:8px;height:8px;border-radius:50%;margin:4px;border:",
            [Function],
            ";",
            [Function],
            ";}}button{background:transparent;border:none;box-shadow:none;border-radius:50%;width:100%;height:100%;text-indent:-1000px;overflow:hidden;padding:0;}}.action{position:absolute;bottom:0;top:0;border:none;",
            [Function],
            ";opacity:0.4;padding:10px;display:flex;align-items:center;justify-content:center;}.navigation-image{text-indent:-1000px;overflow:hidden;min-width:40px;background-repeat:no-repeat;background-position:center;background-size:contain;}.next{right:0;}.prev{left:0;}.fade-out{animation:",
            Keyframes {
              "id": "sc-keyframes-jxZZHL",
              "inject": [Function],
              "name": "jxZZHL",
              "rules": Array [
                "@-webkit-keyframes jxZZHL{0%{opacity:100%;}100%{opacity:0%;}}",
                "@keyframes jxZZHL{0%{opacity:100%;}100%{opacity:0%;}}",
              ],
              "toString": [Function],
            },
            " 2s ease;}.carousel-slides{display:flex;.slide-item{padding:0 2px;flex:0 0 ",
            [Function],
            "%;&:first-child{padding-left:0;}&:last-child{padding-right:0;}}}.hidden{display:none;}",
            ";",
          ],
        },
        "displayName": "AtomicCarousel",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "AtomicCarousel-sc-18kyvc6-0",
        "target": [Function],
        "toString": [Function],
        "usesTheme": true,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <AtomicCarousel
      animationIcon={true}
      autoPlay={true}
      className="AtomicCarousel-sc-18kyvc6-0 eksFus"
      classNames=""
      displayHeader={true}
      dots={true}
      fade={true}
      heading="Carousel"
      navigation={true}
      navigationIcons={true}
      nextLabel="next"
      perSlideFrame={1}
      playLabel="play"
      prevLabel="prev"
      slideTransitionTime={1500}
      stopLabel="stop"
    >
      <section
        aria-labelledby="carousel"
        className="carousel AtomicCarousel-sc-18kyvc6-0 eksFus"
      >
        <header
          id="carousel"
        >
          <Heading
            className="carousel-heading"
          >
            <StyledComponent
              className="carousel-heading"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Heading-sc-1p0x9xg-0",
                    "isStatic": false,
                    "lastClassName": "iKimIq",
                    "rules": Array [
                      [Function],
                      ";",
                      [Function],
                      ";",
                      ";",
                    ],
                  },
                  "displayName": "Heading",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Heading-sc-1p0x9xg-0",
                  "target": [Function],
                  "toString": [Function],
                  "usesTheme": true,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <Heading
                HeadingType="h1"
                className="Heading-sc-1p0x9xg-0 iKimIq carousel-heading"
                elementLocator=""
                inheritedStyles=""
              >
                <h1
                  className="Heading-sc-1p0x9xg-0 iKimIq carousel-heading"
                  data-locator="heading-h1-carousel"
                >
                  Carousel
                </h1>
              </Heading>
            </StyledComponent>
          </Heading>
        </header>
        <div
          className="carousel-container"
        >
          <div
            className="action previous"
          >
            <Button
              className=""
              data-action="prev"
              disabled={true}
              onClick={[Function]}
              onKeyUp={[Function]}
              title="prev"
              type="button"
            >
              <StyledComponent
                className=""
                data-action="prev"
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-sc-1ccn477-0",
                      "isStatic": false,
                      "lastClassName": "joAGrr",
                      "rules": Array [
                        "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                        [Function],
                        "');}}",
                        [Function],
                        ";",
                        ";",
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-sc-1ccn477-0",
                    "target": [Function],
                    "toString": [Function],
                    "usesTheme": true,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                onKeyUp={[Function]}
                title="prev"
                type="button"
              >
                <Button
                  ariaLabel=""
                  className="Button-sc-1ccn477-0 cwmMQA"
                  data-action="prev"
                  disabled={true}
                  elementLocator=""
                  icon={false}
                  iconImage=""
                  inheritedStyles=""
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  primary={false}
                  secondary={false}
                  tertiary={false}
                  title="prev"
                  type="button"
                >
                  <button
                    aria-label={null}
                    className="Button-sc-1ccn477-0 cwmMQA"
                    data-action="prev"
                    data-locator="button-button-prev"
                    disabled={true}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    title="prev"
                    type="button"
                  >
                    prev
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </div>
          <div
            className="carousel-slides fadeIn"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <div
              className="slide-item"
              key="1"
            >
              <h1>
                Test1
              </h1>
            </div>
          </div>
          <div
            className="action next"
          >
            <Button
              className=""
              data-action="next"
              disabled={false}
              onClick={[Function]}
              onKeyUp={[Function]}
              title="next"
              type="button"
            >
              <StyledComponent
                className=""
                data-action="next"
                disabled={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Button-sc-1ccn477-0",
                      "isStatic": false,
                      "lastClassName": "joAGrr",
                      "rules": Array [
                        "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";",
                        [Function],
                        ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                        [Function],
                        "');}}",
                        [Function],
                        ";",
                        ";",
                      ],
                    },
                    "displayName": "Button",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Button-sc-1ccn477-0",
                    "target": [Function],
                    "toString": [Function],
                    "usesTheme": true,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
                onKeyUp={[Function]}
                title="next"
                type="button"
              >
                <Button
                  ariaLabel=""
                  className="Button-sc-1ccn477-0 joAGrr"
                  data-action="next"
                  disabled={false}
                  elementLocator=""
                  icon={false}
                  iconImage=""
                  inheritedStyles=""
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  primary={false}
                  secondary={false}
                  tertiary={false}
                  title="next"
                  type="button"
                >
                  <button
                    aria-label={null}
                    className="Button-sc-1ccn477-0 joAGrr"
                    data-action="next"
                    data-locator="button-button-next"
                    disabled={false}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    title="next"
                    type="button"
                  >
                    next
                  </button>
                </Button>
              </StyledComponent>
            </Button>
          </div>
        </div>
        <div
          className="atomic-dots"
        >
          <List
            ListType="ul"
            borderSeparator={false}
            className=""
            inheritedStyles=""
            inline={false}
            nested={false}
            noDefaultView={false}
            noMargin={false}
          >
            <ul
              className=""
            >
              <li
                className="atomic-item active"
                key="1"
              >
                <Button
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  type="button"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button-sc-1ccn477-0",
                          "isStatic": false,
                          "lastClassName": "joAGrr",
                          "rules": Array [
                            "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                            [Function],
                            "');}}",
                            [Function],
                            ";",
                            ";",
                          ],
                        },
                        "displayName": "Button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button-sc-1ccn477-0",
                        "target": [Function],
                        "toString": [Function],
                        "usesTheme": true,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    type="button"
                  >
                    <Button
                      ariaLabel=""
                      className="Button-sc-1ccn477-0 joAGrr"
                      disabled={false}
                      elementLocator=""
                      icon={false}
                      iconImage=""
                      inheritedStyles=""
                      onClick={[Function]}
                      onKeyUp={[Function]}
                      primary={false}
                      secondary={false}
                      tertiary={false}
                      type="button"
                    >
                      <button
                        aria-label={null}
                        className="Button-sc-1ccn477-0 joAGrr"
                        data-locator="button-button-"
                        disabled={false}
                        onClick={[Function]}
                        onKeyUp={[Function]}
                        type="button"
                      >
                        1
                      </button>
                    </Button>
                  </StyledComponent>
                </Button>
              </li>
              <li
                className="atomic-item"
                key="2"
              >
                <Button
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  type="button"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button-sc-1ccn477-0",
                          "isStatic": false,
                          "lastClassName": "joAGrr",
                          "rules": Array [
                            "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                            [Function],
                            "');}}",
                            [Function],
                            ";",
                            ";",
                          ],
                        },
                        "displayName": "Button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button-sc-1ccn477-0",
                        "target": [Function],
                        "toString": [Function],
                        "usesTheme": true,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    type="button"
                  >
                    <Button
                      ariaLabel=""
                      className="Button-sc-1ccn477-0 joAGrr"
                      disabled={false}
                      elementLocator=""
                      icon={false}
                      iconImage=""
                      inheritedStyles=""
                      onClick={[Function]}
                      onKeyUp={[Function]}
                      primary={false}
                      secondary={false}
                      tertiary={false}
                      type="button"
                    >
                      <button
                        aria-label={null}
                        className="Button-sc-1ccn477-0 joAGrr"
                        data-locator="button-button-"
                        disabled={false}
                        onClick={[Function]}
                        onKeyUp={[Function]}
                        type="button"
                      >
                        2
                      </button>
                    </Button>
                  </StyledComponent>
                </Button>
              </li>
              <li
                className="atomic-item"
                key="3"
              >
                <Button
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  type="button"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button-sc-1ccn477-0",
                          "isStatic": false,
                          "lastClassName": "joAGrr",
                          "rules": Array [
                            "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                            [Function],
                            "');}}",
                            [Function],
                            ";",
                            ";",
                          ],
                        },
                        "displayName": "Button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button-sc-1ccn477-0",
                        "target": [Function],
                        "toString": [Function],
                        "usesTheme": true,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    type="button"
                  >
                    <Button
                      ariaLabel=""
                      className="Button-sc-1ccn477-0 joAGrr"
                      disabled={false}
                      elementLocator=""
                      icon={false}
                      iconImage=""
                      inheritedStyles=""
                      onClick={[Function]}
                      onKeyUp={[Function]}
                      primary={false}
                      secondary={false}
                      tertiary={false}
                      type="button"
                    >
                      <button
                        aria-label={null}
                        className="Button-sc-1ccn477-0 joAGrr"
                        data-locator="button-button-"
                        disabled={false}
                        onClick={[Function]}
                        onKeyUp={[Function]}
                        type="button"
                      >
                        3
                      </button>
                    </Button>
                  </StyledComponent>
                </Button>
              </li>
              <li
                className="atomic-item"
                key="4"
              >
                <Button
                  onClick={[Function]}
                  onKeyUp={[Function]}
                  type="button"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Button-sc-1ccn477-0",
                          "isStatic": false,
                          "lastClassName": "joAGrr",
                          "rules": Array [
                            "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";",
                            [Function],
                            ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                            [Function],
                            "');}}",
                            [Function],
                            ";",
                            ";",
                          ],
                        },
                        "displayName": "Button",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Button-sc-1ccn477-0",
                        "target": [Function],
                        "toString": [Function],
                        "usesTheme": true,
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    type="button"
                  >
                    <Button
                      ariaLabel=""
                      className="Button-sc-1ccn477-0 joAGrr"
                      disabled={false}
                      elementLocator=""
                      icon={false}
                      iconImage=""
                      inheritedStyles=""
                      onClick={[Function]}
                      onKeyUp={[Function]}
                      primary={false}
                      secondary={false}
                      tertiary={false}
                      type="button"
                    >
                      <button
                        aria-label={null}
                        className="Button-sc-1ccn477-0 joAGrr"
                        data-locator="button-button-"
                        disabled={false}
                        onClick={[Function]}
                        onKeyUp={[Function]}
                        type="button"
                      >
                        4
                      </button>
                    </Button>
                  </StyledComponent>
                </Button>
              </li>
            </ul>
          </List>
        </div>
        <div
          aria-label="animation"
          className="animation-panel"
        >
          <Button
            className="pause-icon"
            iconImage={false}
            onClick={[Function]}
            type="button"
          >
            <StyledComponent
              className="pause-icon"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Button-sc-1ccn477-0",
                    "isStatic": false,
                    "lastClassName": "joAGrr",
                    "rules": Array [
                      "border:none;border-radius:0;position:relative;min-height:48px;cursor:",
                      [Function],
                      ";",
                      [Function],
                      ";",
                      [Function],
                      ";",
                      [Function],
                      ";",
                      [Function],
                      ";&:focus:not(.focus-visible){outline:none;}&.icon{border:none;background-color:transparent;text-indent:-1000px;overflow:hidden;background-repeat:no-repeat;background-position:center;background-size:cover;min-width:20px;min-height:20px;padding:0;&.icon-image{background-image:url('",
                      [Function],
                      "');}}",
                      [Function],
                      ";",
                      ";",
                    ],
                  },
                  "displayName": "Button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Button-sc-1ccn477-0",
                  "target": [Function],
                  "toString": [Function],
                  "usesTheme": true,
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              iconImage={false}
              onClick={[Function]}
              type="button"
            >
              <Button
                ariaLabel=""
                className="Button-sc-1ccn477-0 joAGrr pause-icon"
                disabled={false}
                elementLocator=""
                icon={false}
                iconImage={false}
                inheritedStyles=""
                onClick={[Function]}
                primary={false}
                secondary={false}
                tertiary={false}
                type="button"
              >
                <button
                  aria-label={null}
                  className="Button-sc-1ccn477-0 joAGrr pause-icon"
                  data-locator="button-button-stop"
                  disabled={false}
                  onClick={[Function]}
                  type="button"
                >
                  stop
                </button>
              </Button>
            </StyledComponent>
          </Button>
        </div>
        <div
          aria-atomic="true"
          aria-live="polite"
          className="hidden"
          tabIndex="-1"
        >
          Item 1 of 4
        </div>
      </section>
    </AtomicCarousel>
  </StyledComponent>
</AtomicCarousel>
`;
